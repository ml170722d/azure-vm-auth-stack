name: "Terraform & Ansible CI/CD"

on:
  workflow_dispatch:
  push:
    branches:
      - feature/cicd_setup

jobs:
  terraform:
    name: "Terraform Plan & Apply"
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform
    env:
      TF_VAR_client_id:             ${{ secrets.ARM_CLIENT_ID }}
      TF_VAR_client_secret:         ${{ secrets.ARM_CLIENT_SECRET }}
      TF_VAR_tenant_id:             ${{ secrets.ARM_TENANT_ID }}
      TF_VAR_subscription_id:       ${{ secrets.ARM_SUBSCRIPTION_ID }}
      TF_VAR_vm_admin_username:     ${{ secrets.VM_ADMIN_USERNAME }}
      TF_VAR_vm_admin_public_key:   ${{ secrets.VM_ADMIN_PUBLIC_KEY }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.5.6"

      - name: Terraform Init
        run: terraform init -input=false

      - name: Terraform Format & Validate
        run: |
          # terraform fmt -check
          terraform validate

      - name: Terraform Plan
        run: terraform plan -out=tfplan -input=false

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan

      - name: Extract Terraform outputs
        id: tfoutputs
        run: |
          echo "::set-output name=vm_public_ip::$(terraform output -raw vm_pub_ip)"

    outputs:
      vm_public_ip: ${{ steps.tfoutputs.outputs.vm_pub_ip }}

  ansible:
    name: "Ansible Provisioning"
    runs-on: ubuntu-latest
    needs: terraform
    env:
      DB:               ${{ secrets.DB }}
      PSQL_USER:        ${{ secrets.PSQL_USER }}
      PSQL_PWD:         ${{ secrets.PSQL_PWD }}
      KC_USER:          ${{ secrets.KC_USER }}
      KC_PWD:           ${{ secrets.KC_PWD }}
      KC_CLIENT_SECRET: ${{ secrets.KC_CLIENT_SECRET }}
      SSH_PRIVATE_KEY:  ${{ secrets.SSH_PRIVATE_KEY }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Ansible
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip
          pip3 install -r requirements.txt

      - name: Write SSH private key for VM access
        run: |
          mkdir -p ~/.ssh
          echo "${SSH_PRIVATE_KEY}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Add VM to known_hosts (avoid interactive prompt)
        run: |
          ssh-keyscan -H ${{ needs.terraform.outputs.vm_public_ip }} >> ~/.ssh/known_hosts

      - name: Run Ansible Playbook
        run: |
          ansible-playbook \
            -i hosts.yaml \
            main.yaml \
            --private-key ~/.ssh/id_rsa
